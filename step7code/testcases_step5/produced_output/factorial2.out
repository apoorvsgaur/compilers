;IR code
;LABEL factorial
;LINK
;EQ $P1 1 t_if0
;JUMP t_else0
;LABEL t_if0
;STOREI 1 $R
;RET
;JUMP END0
;LABEL t_else0
;EQ 1 1 t_if1
;JUMP END1
;LABEL t_if1
;I- $P1 1 $T1
;PUSH
;PUSH $T1
;JSR factorial
;POP
;POP $T2
;STOREI $T2 $L2
;I* $L2 $P1 $T3
;STOREI $T3 $L1
;JUMP END1
;LABEL END1
;LABEL END0
;STOREI $L1 $R
;RET

;LABEL main
;LINK
;WRITES input
;READI $L1
;EQ $L1 1 t_if2
;JUMP t_else2
;LABEL t_if2
;STOREI 1 $L2
;JUMP END2
;LABEL t_else2
;GT $L1 1 t_if3
;JUMP t_else3
;LABEL t_if3
;PUSH
;PUSH $L1
;JSR factorial
;POP
;POP $T4
;STOREI $T4 $L2
;JUMP END3
;LABEL t_else3
;EQ 1 1 t_if4
;JUMP END4
;LABEL t_if4
;STOREI 0 $L2
;JUMP END4
;LABEL END4
;LABEL END3
;LABEL END2
;WRITEI $L2
;WRITES eol
;STOREI 0 $R
;RET

;LABEL factorial
;LINK
;EQ $P1 1 t_if0
;JUMP t_else0
;LABEL t_if0
;STOREI 1 $R
;RET
;JUMP END0
;LABEL t_else0
;EQ 1 1 t_if1
;JUMP END1
;LABEL t_if1
;I- $P1 1 $T1
;PUSH
;PUSH $T1
;JSR factorial
;POP
;POP $T2
;STOREI $T2 $L2
;I* $L2 $P1 $T3
;STOREI $T3 $L1
;JUMP END1
;LABEL END1
;LABEL END0
;STOREI $L1 $R
;RET

;LABEL main
;LINK
;WRITES input
;READI $L1
;EQ $L1 1 t_if2
;JUMP t_else2
;LABEL t_if2
;STOREI 1 $L2
;JUMP END2
;LABEL t_else2
;GT $L1 1 t_if3
;JUMP t_else3
;LABEL t_if3
;PUSH
;PUSH $L1
;JSR factorial
;POP
;POP $T4
;STOREI $T4 $L2
;JUMP END3
;LABEL t_else3
;EQ 1 1 t_if4
;JUMP END4
;LABEL t_if4
;STOREI 0 $L2
;JUMP END4
;LABEL END4
;LABEL END3
;LABEL END2
;WRITEI $L2
;WRITES eol
;STOREI 0 $R
;RET

;tiny code
var TempVar4
var TempVar3
var TempVar2
var TempVar1
str input "Please enter an integer number: "
str eol "\n"
push
push r0
push r1
push r2
push r3
jsr main
sys halt
label factorial
link 2
move $6 r1
move 1 r2
cmpi r1 r2
jeq t_if0
jmp t_else0
label t_if0
move 1 r3
move r3 $7
unlnk
ret
jmp END0
label t_else0
move 1 r1
move 1 r2
cmpi r1 r2
jeq t_if1
jmp END1
label t_if1
move $6 r1
move 1 r2
subi r2 r1
move r1 TempVar1
push
move TempVar1 r0
push r0
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
pop r0
move r0 TempVar2
move TempVar2 r3
move r3 $-2
move $-2 r1
move $6 r2
muli r1 r2
move r2 TempVar3
move TempVar3 r3
move r3 $-1
jmp END1
label END1
label END0
move $-1 r3
move r3 $7
unlnk
ret
label main
link 2
sys writes input
sys readi $-1
move $-1 r1
move 1 r2
cmpi r1 r2
jeq t_if2
jmp t_else2
label t_if2
move 1 r3
move r3 $-2
jmp END2
label t_else2
move $-1 r1
move 1 r2
cmpi r1 r2
jgt t_if3
jmp t_else3
label t_if3
push
push $-1
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
pop r0
move r0 TempVar4
move TempVar4 r3
move r3 $-2
jmp END3
label t_else3
move 1 r1
move 1 r2
cmpi r1 r2
jeq t_if4
jmp END4
label t_if4
move 0 r3
move r3 $-2
jmp END4
label END4
label END3
label END2
sys writei $-2
sys writes eol
move 0 r3
move r3 $6
unlnk
ret
end
